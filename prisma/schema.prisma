// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  price        Float
  image        String?
  categoryId   String        @db.ObjectId
  // supplierId   String        @db.ObjectId
  Category     Category      @relation(fields: [categoryId], references: [id])
  // Supplier     Supplier      @relation(fields: [supplierId], references: [id])
  OrderDetails OrderDetail[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Customer {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String?
  phone     String
  Orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model Supplier {
//   id        String    @id @default(auto()) @map("_id") @db.ObjectId
//   name      String
//   contact   String?
//   Products  Product[]
//   createdAt DateTime  @default(now())
// }

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  status    Boolean
  Products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  Orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  date        DateTime      @default(now())
  customerId  String        @db.ObjectId
  userId      String        @db.ObjectId
  Customer    Customer      @relation(fields: [customerId], references: [id])
  User        User          @relation(fields: [userId], references: [id])
  OrderDetail OrderDetail[]
  createdAt   DateTime      @default(now())
}

model OrderDetail {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String  @db.ObjectId
  productId String  @db.ObjectId
  quantity  String
  Product   Product @relation(fields: [productId], references: [id])
  Order     Order   @relation(fields: [orderId], references: [id])
}
